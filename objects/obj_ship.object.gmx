<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gamespeed = 1;
global.speedgain = global.gamespeed;
alarmNShoot = -1;
obj_ship.GodMode = false;
image_angle = 90;
BulletSpd = 1000;
live = 1999;
life = live;
RandAngl = false;
SuperFast = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
SetalarmNShoot = 0.1 * room_speed;

//if global.gamespeed != global.speedgain alarmNShoot = 0.05 * room_speed / global.gamespeed;
//global.speedgain = global.gamespeed;

if global.pause = false { //begin non-pause

    if live != life if obj_ship.GodMode = true live += 1;
    life = live;
    //alarms
    alarmNShoot -= 1 * global.gamespeed;
    
    //movement
    distance = point_distance( x, y, mouse_x, mouse_y);
    direct = point_direction( x, y, mouse_x, mouse_y);
    x += (power(distance * 60,0.8)-1) * cos(direct * pi / 180) / room_speed * global.gamespeed;
    y -= (power(distance * 60,0.8)-1) * sin(direct * pi / 180) / room_speed * global.gamespeed;
    direct = 90 - power(distance,0.6) * cos(direct * pi / 180); 
    image_angle = direct;
    
        //Shooting
    
    if alarmNShoot &lt;= -1 { //shoots normal bullets
        if SuperFast rep = 5 else rep = 1;
        repeat(rep) {
            if RandAngl direct = random(360) else direct += random_range(-5,5);
            alarmNShoot = SetalarmNShoot;
            scr_shoot_bullet(direct,BulletSpd,1,x,y)
        }
    }
        //end shooting
    direct = point_direction( x, y, mouse_x, mouse_y);

} //end non-pause

if keyboard_check(vk_home) game_restart();

if y &gt; room_height y = 0;
if x &lt; 0 x = room_width;
if x &gt; room_width x = 0;
if y &lt; 0 y = room_width;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
